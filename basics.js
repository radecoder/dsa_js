// 1Ô∏è‚É£ Print all numbers from 1‚Äì10 using a for loop.

//     for (let index = 1; index < 11; index++) {
//         console.log(index)
//     }

// 2Ô∏è‚É£ Write a function to check if a number is even or odd.

// let n
// function checkEvenOdd(n) {
//     if (n%2 === 0)
//         console.log("even")
//     else{
//         console.log("odd")
//     }
// }
// checkEvenOdd(3)
// checkEvenOdd(4)
// const checkEvenOdd = (n) => {
//     return n%2===0 ? "EVEN" : "ODD";
// }
// console.log(checkEvenOdd(3));
// console.log(checkEvenOdd(4));

// 3Ô∏è‚É£ Given an array [1,2,3,4,5], create a new array with each element squared.

// let arr1 = [1, 2, 3, 4, 5];
// let arr2 = [];
// for (let i = 1; i < arr1.length; i++) {
//   arr2.push(arr1[i] * arr1[i]);
// }
// console.log(arr2);

//  Output:
// [2,4,6,8,10]

// just double each number instead of squaring
// let arr = [1,2,3,4,5]
// let squared = arr.map(num => num*2)
// console.log(squared)

//  Output:
// [1, 4, 9, 16, 25]

// 1Ô∏è‚É£ Print numbers from 1 to 20.
// for(let i=1; i<=20;i++){
//     console.log(i);
// }
// 2Ô∏è‚É£ Print even numbers from 1 to 20.
// for(let i=1; i<=20; i++){
//     i%2===0 && console.log(i)
// }

// or

// for (let i = 2; i <= 20; i += 2) {
//     console.log(i);
// }

// 3Ô∏è‚É£ Print the sum of numbers from 1 to 10.
// let sum = 0;
// for(let i=1; i<=10; i++){
//     sum = i+sum;
// }
// console.log(sum);
// 4Ô∏è‚É£ Print the multiplication table of 5 (up to 10).
// for(let i=1; i<=50; i++){
//     i%5===0 && console.log(i)
// }

// or

//multiplication table of 5
// for(let i=1; i<=10; i++){
//     console.log(`5 x ${i} = ${5 * i}`);
// }

// üîπ Medium:
// 5Ô∏è‚É£ Given an array [3, 6, 2, 9, 1], print each element.
// let arr = [3, 6, 2, 9, 1];
// for(let i=0; i<arr.length; i++){
//     console.log(arr[i]);
// }

// 6Ô∏è‚É£ Given the same array, print only the elements that are > 3.

// let arr = [3, 6, 2, 9, 1];
// for (let i = 0; i < arr.length; i++) {
//   if (arr[i] > 3) {
//     console.log(arr[i]);
//   }
// }

// 7Ô∏è‚É£ Find the maximum number in [3, 6, 2, 9, 1].

// let arr = [3, 6, 2, 9, 1];
// let max = arr[0];
// for (let i = 0; i < arr.length; i++) {
//   if (arr[i] > max) {
//     max = arr[i];
//   }
// }
// console.log(max);

// 8Ô∏è‚É£ Print all pairs of elements in the array (nested loops).

// let arr = [3, 6, 2, 9, 1];

// for (let i = 0; i < arr.length; i++) {
//     for (let j = 0; j < arr.length; j++) {
//         console.log(arr[i], arr[j])
//     }
// }

// üîπ Challenge:
// 9Ô∏è‚É£ Print a pattern like this:

// *
// **
// ***
// ****
// *****

/*
Row 1 ‚Üí 1 star
Row 2 ‚Üí 2 stars
Row 3 ‚Üí 3 stars

So on row i, you print exactly i stars.
*/

// for (let i = 1; i <= 5; i++) {          // outer loop (rows) (how many rows to print).
//     let str = "";                       // empty string for current row
//     for (let j = 1; j <= i; j++) {      // inner loop (columns)
//         str += "*";                     // add one * to the string
//     }
//     console.log(str);                   // print the string after inner loop
// }

// üîü Print a pattern like this:

// 1
// 12
// 123
// 1234
// 12345

// let n=5;
// for(let i=1; i<=n; i++){
//     let str="";
//     for(let j=1; j<=i; j++){
//         str+=j;
//     }
//     console.log(str);
// }

// for (let i = 1; i <= 5; i++) {      // outer loop ‚Üí rows
//     let str = "";                   // string to build each row
//     for (let j = 1; j <= i; j++) {  // inner loop ‚Üí columns
//         str += j;                   // append current j
//     }
//     console.log(str);               // print the row
// }

/*
üöÄ How it works:
When i = 1:
j runs from 1 ‚Üí 1

str = "1"
prints ‚Üí 1

When i = 2:
j runs from 1 ‚Üí 2

str = "12"

prints ‚Üí 12

When i = 3:
j runs from 1 ‚Üí 3

str = "123"

prints ‚Üí 123

‚Ä¶and so on up to i = 5.
*/

// 7Ô∏è‚É£ Reverse number pattern:

// 54321
// 5432
// 543
// 54
// 5

// n = 5
//       i         j coulmn
// row - 1 , str - 5
// row - 2 , str - 4
// row - 3 , str - 3
// row - 4 , str - 2
// row - 5 , str - 1

// let n=5;
// for(let i=1; i<=n; i++){
//     let str= "";
//     for(let j=n; j>=i; j--){
//         str+=j;
//     }
//     console.log(str);
// }

// for(i = 1; i<=5; i++){
//     let str = "";
//     for(j= 5; j>= i; j--){   // 5 5
//         str += j;
//     }
//     console.log(str);
// }

// 8Ô∏è‚É£ Right-aligned stars:

//     *
//    **
//   ***
//  ****
// *****

// n = 5
//       i           j          k
// row - 1 , space - 4 , star - 1
// row - 2 , space - 3 , star - 2
// row - 3 , space - 2 , star - 3
// row - 4 , space - 1 , star - 4
// row - 5 , space - 0 , star - 5

// let n = 5;
// for(let i=1; i<=n; i++){
//     let str = "";
//     for(let j=1; j<=(n-i); j++){
//         str+=" ";
//     }
//     for(let k=1; k<=i; k++){
//         str+= "*";
//     }
//     console.log(str)
// }

//or

// for(i=1; i<=5; i ++){
//     let str = "";
//     for(j=4; j>=i; j--){
//         str += " ";
//     }

//     for(k = 1; k<=i; k++){
//         str+="*";
//     }
//     console.log(str);

// }

// 9Ô∏è‚É£ Pyramid pattern:

//     *
//    ***
//   *****
//  *******
// *********

// n = 5
//       i           j          k
// row - 1 , space - 4 , star - 1
// row - 2 , space - 3 , star - 3
// row - 3 , space - 2 , star - 5
// row - 4 , space - 1 , star - 7
// row - 5 , space - 0 , star - 9

// let n=5;
// for(let i=1; i<=n; i++){
//     str="";
//     for(let j=1; j<=n-i; j++){
//         str+=" ";
//     }
//     for(let k=1; k<=(2*i)-1; k++){
//         str+="*"
//     }
//     console.log(str);
// }

// let n = 5;
// for (i = 1; i <= n; i++) {
//   //row
//   let str = "";
//   for (j = 1; j <= n - i; j++) {
//     //space
//     str += " ";
//   }
//   for (k = 1; k <= 2 * i - 1; k++) {
//     // star
//     str += "*";
//   }
//   console.log(str);
// }

/*
üöÄ 1Ô∏è‚É£ Most Important Questions for for Loop (including patterns)
üìã Numbers & Logic:
‚úÖ Print numbers from 1 ‚Üí N
‚úÖ Print even & odd numbers between 1 ‚Üí N
‚úÖ Sum of first N natural numbers
‚úÖ Factorial of N (N!)
‚úÖ Reverse a number (e.g., 123 ‚Üí 321)
‚úÖ Check if a number is Palindrome
‚úÖ Check if a number is Prime
‚úÖ Print Fibonacci series up to N terms

üìã Patterns:
‚úÖ Right-angled triangle:

markdown
Copy
Edit
*
**
***
****
*****
‚úÖ Right-aligned triangle:

markdown
Copy
Edit
    *
   **
  ***
 ****
*****
‚úÖ Pyramid:

markdown
Copy
Edit
    *
   ***
  *****
 *******
*********
‚úÖ Inverted pyramid:

markdown
Copy
Edit
*********
 *******
  *****
   ***
    *
‚úÖ Diamond:

markdown
Copy
Edit
    *
   ***
  *****
   ***
    *
‚úÖ Number patterns:

yaml
Copy
Edit
1
12
123
1234
12345
‚úÖ Reverse number triangle:

yaml
Copy
Edit
54321
5432
543
54
5
‚úÖ Floyd‚Äôs triangle:

Copy
Edit
1
2 3
4 5 6
7 8 9 10
üöÄ 2Ô∏è‚É£ Most Important Questions for Arrays
‚úÖ Print all elements of an array
‚úÖ Find the maximum & minimum element
‚úÖ Find the second largest element
‚úÖ Reverse an array
‚úÖ Count frequency of each element
‚úÖ Print all pairs of elements
‚úÖ Print all unique pairs (i < j)
‚úÖ Find all triplets in an array that sum to a given number
‚úÖ Find all unique triplets that sum to 0 (3-sum)
‚úÖ Find the missing number in an array of 1 ‚Üí N
‚úÖ Find duplicate elements in an array
‚úÖ Find intersection (common elements) of two arrays

üöÄ 3Ô∏è‚É£ Most Important Questions for Strings
‚úÖ Reverse a string (e.g., hello ‚Üí olleh)
‚úÖ Check if a string is a Palindrome (madam)
‚úÖ Count vowels & consonants
‚úÖ Remove duplicate characters
‚úÖ Find the most frequent character
‚úÖ Count occurrences of each character
‚úÖ Check if two strings are anagrams (listen ‚Üî silent)
‚úÖ Capitalize the first letter of each word
‚úÖ Check if string contains only letters / only digits
‚úÖ Count words in a string

üìù Suggested Strategy:
‚ú® Start with For Loops + Patterns ‚Üí get strong in basic loops & nested loops.
‚ú® Then Arrays ‚Üí because they add indexing, conditions, and nested logic.
‚ú® Then Strings ‚Üí because they test manipulation, conditions, and attention to detail.

If you want:
üî∑ I can give you one-by-one questions with hints
üî∑ Or I can give you code templates
üî∑ Or I can create a practice sheet/PDF for you

üí¨ Just tell me:
‚úÖ Start from For Loop #1
‚úÖ Give me arrays now
‚úÖ Give me all one by one with hints

How do you want to proceed? üöÄ









Ask ChatGPT

*/
